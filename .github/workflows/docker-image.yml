name: Deploy Line-chatbot

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: bestbest/line-chatbot:${{ github.sha }}

      - name: Deploy via SSH
        run: |
          sudo apt-get update
          sudo apt-get install -y expect
          cat > deploy_expect.sh << 'EOF'
          #!/usr/bin/expect -f
          set timeout -1
          spawn ssh -o BatchMode=yes -o StrictHostKeyChecking=no -p 3022 4504@gate.manage.proen.cloud

          expect {
              -re {.*Permanently added.*} {
                  exp_continue
              }
              -re {.*Enter \[0-5\]:} {
                  send "3\r"
                  exp_continue
              }
              -re {.*Enter \[0-2\]:} {
                  send "2\r"
                  exp_continue
              }
              "root@*" {
                  send "docker pull bestbest/line-chatbot:${{ github.sha }}\r"
                  send "docker stop optimistic_haslett && docker rm optimistic_haslett\r"
                  send "docker run -d \
                        --name optimistic_haslett \
                        -p $PORT:$PORT \
                        -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
                        -e CHANNEL_SECRET=${{ secrets.CHANNEL_SECRET }} \
                        -e CHANNEL_TOKEN=${{ secrets.CHANNEL_SECRET }} \
                        -e PORT=$PORT \
                        bestbest/line-chatbot:${{ github.sha }}\r"
                  send "exit\r"
              }
          }
          expect eof
          close
          EOF
          chmod +x deploy_expect.sh
          ./deploy_expect.sh