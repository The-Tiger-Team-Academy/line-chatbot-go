name: Deploy Line-chatbot

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH key
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: Dockerfile
        push: true
        tags: bestbest/line-chatbot:v1
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CHANNEL_SECRET: ${{ secrets.CHANNEL_SECRET }}
        CHANNEL_TOKEN: ${{ secrets.CHANNEL_TOKEN }}
        PORT: 6789

    - name: Deploy via SSH
      run: |
        sudo apt-get update
        sudo apt-get install -y expect
        cat > deploy_expect.sh << 'EOF'
        #!/usr/bin/expect -f
        set timeout -1
        exp_internal 1  # Enable debugging
    
        spawn ssh -o BatchMode=yes -o StrictHostKeyChecking=no -p 3022 4504@gate.manage.proen.cloud
    
        expect {
            -re {Enter \[0-3\]:} {
                send "3\r"
                exp_continue
            }
            -re {Enter \[0-2\]:} {
                send "2\r"
                exp_continue
            }
            -re {\\\$ |root@node.*:~#} {
                send "docker ps -a | grep line-chatbot-container && docker rm -f line-chatbot-container || echo 'No existing container to remove.'\r"
                send "docker pull bestbest/line-chatbot:v1 && docker run -d --name line-chatbot-container -p $PORT:6789 -e CHANNEL_SECRET=$CHANNEL_SECRET -e CHANNEL_TOKEN=$CHANNEL_TOKEN -e OPENAI_API_KEY=$OPENAI_API_KEY bestbest/line-chatbot:v1\r"
                expect {
                    -re "Up.*seconds" {
                        send_user "Container is running.\r"
                    }
                    default {
                        send_user "Failed to start the container. Checking logs.\r"
                        send "docker logs line-chatbot-container\r"
                        expect {
                            -re "Error.*" {
                                send_user "Error found in logs.\r"
                                exit 1
                            }
                            default {
                                send_user "No specific error in logs, container exited unexpectedly.\r"
                                exit 1
                            }
                        }
                    }
                }
                send "exit\r"
                expect eof
            }
        }
        
    - name: Confirm deployment success
      run: echo "Deploy Success"
